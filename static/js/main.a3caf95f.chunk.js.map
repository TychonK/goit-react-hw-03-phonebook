{"version":3,"sources":["components/Contacts_List/ListItems.js","components/Form/Form.js","components/Filter/Filter.js","App.js","index.js"],"names":["ListItems","arr","filter","deleteContact","val","name","toLowerCase","includes","map","index","number","className","id","type","onClick","Form","nameId","uuid","numberId","state","handleContact","e","setState","prevState","target","value","handleSubmit","preventDefault","props","existing","some","alert","obj","addNewContact","onSubmit","this","htmlFor","placeholder","pattern","title","required","onChange","Component","Filter","filterNew","handleSearch","App","contacts","prev","delete","contact","localStorage","getItem","JSON","parse","setItem","stringify","ReactDOM","render","document","getElementById"],"mappings":"mRAoBeA,MApBf,YAAoD,IAA/BC,EAA8B,EAA9BA,IAAKC,EAAyB,EAAzBA,OAAQC,EAAiB,EAAjBA,cAe9B,OAdmBF,EAAIC,QAAO,SAACE,GAC3B,MAAe,KAAXF,GAEOE,EAAIC,KAAKC,cAAcC,SAASL,EAAOI,eADvCF,OACJ,KAGRI,KAAI,SAACJ,EAAKK,GACT,OACI,+BAAiBL,EAAIC,KAArB,KAA6BD,EAAIM,OAC7B,wBAAQC,UAAU,gBAAgBC,GAAIR,EAAIC,KAAMQ,KAAK,SAASC,QAASX,EAAvE,sBADKM,O,eCLRM,EAAb,4MACIC,OAASC,cADb,EAEIC,SAAWD,cAFf,EAIIE,MAAQ,CACJd,KAAM,GACNK,OAAQ,IANhB,EASEU,cAAgB,SAACC,GACf,EAAKC,UAAS,SAACC,GACb,OAAO,eACJF,EAAEG,OAAOnB,KAAOgB,EAAEG,OAAOC,WAZlC,EAiBEC,aAAe,SAACL,GAEd,GADAA,EAAEM,iBACE,EAAKC,MAAMC,SAASC,MAAK,SAAAT,GAAC,OAAIA,EAAEhB,OAAS,EAAKc,MAAMd,QACtD0B,MAAM,GAAD,OAAI,EAAKZ,MAAMd,KAAf,yBADP,CAIA,IAAM2B,EAAM,CACV3B,KAAM,EAAKc,MAAMd,KACjBK,OAAQ,EAAKS,MAAMT,QAErB,EAAKkB,MAAMK,cAAcD,GACzB,EAAKV,SAAS,CAAEjB,KAAM,GAAIK,OAAQ,OA5BtC,4CA+BI,WACI,OACI,uBAAMwB,SAAUC,KAAKT,aAArB,UACF,wBAAOU,QAASD,KAAKnB,OAArB,UACE,sCACF,uBACEH,KAAK,OACHR,KAAK,OACLO,GAAIuB,KAAKnB,OACTS,MAAOU,KAAKhB,MAAMd,KACpBgC,YAAY,0BACZC,QAAQ,yHACRC,MAAM,kcACJC,UAAQ,EACRC,SAAUN,KAAKf,mBAGnB,wBAAOgB,QAASD,KAAKjB,SAArB,UACE,wCACA,uBACEL,KAAK,MACLR,KAAK,SACLO,GAAIuB,KAAKjB,SACTO,MAAOU,KAAKhB,MAAMT,OAClB2B,YAAY,4BACZC,QAAQ,yFACRC,MAAM,giBACNC,UAAQ,EACRC,SAAUN,KAAKf,mBAInB,wBAAQT,UAAU,aAAaE,KAAK,SAApC,gCA/DV,GAA0B6B,aCFbC,EAAb,4MACIC,UAAY,SAACvB,GACT,EAAKO,MAAMiB,aAAaxB,IAFhC,4CAKI,WACI,OACI,uBACIR,KAAK,SACLR,KAAK,aACLoB,MAAOU,KAAKP,MAAM1B,OAClBmC,YAAY,aACZI,SAAUN,KAAKS,gBAZ/B,GAA4BF,aCOtBI,E,4MACJ3B,MAAQ,CACN4B,SAAU,GACZ7C,OAAQ,I,EAeR+B,cAAgB,SAACD,GACf,EAAKV,UAAS,SAAC0B,GACb,MAAO,CAAED,SAAS,GAAD,mBAAMC,EAAKD,UAAX,CAAqBf,S,EAI1Ca,aAAe,SAACxB,GACd,EAAKC,SAAS,CACZpB,OAAQmB,EAAEG,OAAOC,S,EAIrBwB,OAAS,SAAC5B,GACR,EAAKC,UAAS,SAAAC,GAEV,MAAO,CAAEwB,SADQxB,EAAUwB,SAAS7C,QAAO,SAAAgD,GAAO,OAAIA,EAAQ7C,OAASgB,EAAEG,OAAOZ,W,wDA1BtF,WACMuC,aAAaC,QAAQ,aACvBjB,KAAKb,SAAS,CACZyB,SAAUM,KAAKC,MAAMH,aAAaC,QAAQ,iB,gCAKhD,WACED,aAAaI,QAAQ,WAAYF,KAAKG,UAAUrB,KAAKhB,MAAM4B,a,oBAsB7D,WACE,OACE,sBAAKpC,UAAU,MAAf,UACE,cAAC,EAAD,CAAMsB,cAAeE,KAAKF,cAAeJ,SAAWM,KAAKhB,MAAM4B,WAC/D,0CACA,uDACA,cAAC,EAAD,CAAQF,aAAcV,KAAKU,aAAc3C,OAAQiC,KAAKhB,MAAMjB,SAC5D,6BACE,cAAC,EAAD,CAAWD,IAAKkC,KAAKhB,MAAM4B,SAAU7C,OAAQiC,KAAKhB,MAAMjB,OAAQC,cAAgBgC,KAAKc,kB,GA7C7EP,aAoDHI,ICxDfW,IAASC,OACP,mCACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.a3caf95f.chunk.js","sourcesContent":["function ListItems({ arr, filter, deleteContact }) {\r\n    const listMarkup = arr.filter((val) => {\r\n        if (filter === \"\") {\r\n            return val\r\n        } else if (val.name.toLowerCase().includes(filter.toLowerCase())) {\r\n            return val\r\n        }\r\n    }).map((val, index) => {\r\n        return (\r\n            <li key={index}>{val.name}: {val.number}\r\n                <button className=\"delete-button\" id={val.name} type=\"button\" onClick={deleteContact}>Delete</button>\r\n            </li>\r\n            \r\n        )\r\n    })     \r\n    return (\r\n        listMarkup\r\n    )\r\n}\r\n\r\nexport default ListItems;","import { Component } from 'react'\r\n\r\nimport { v4 as uuid } from 'uuid'\r\n\r\nexport class Form extends Component {\r\n    nameId = uuid()\r\n    numberId = uuid()\r\n\r\n    state = {\r\n        name: '',\r\n        number: ''\r\n    }\r\n\r\n  handleContact = (e) => {\r\n    this.setState((prevState) => {\r\n      return {\r\n        [e.target.name]: e.target.value,\r\n      }\r\n    })\r\n  }\r\n\r\n  handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    if (this.props.existing.some(e => e.name === this.state.name)) {\r\n      alert(`${this.state.name} already exists.`)\r\n      return\r\n}\r\n    const obj = {\r\n      name: this.state.name,\r\n      number: this.state.number,\r\n    }\r\n    this.props.addNewContact(obj)\r\n    this.setState({ name: \"\", number: \"\" })\r\n  }\r\n    \r\n    render() {\r\n        return (\r\n            <form onSubmit={this.handleSubmit}>\r\n          <label htmlFor={this.nameId}>\r\n            <h2>Name</h2>\r\n          <input\r\n            type=\"text\"\r\n              name=\"name\"\r\n              id={this.nameId}\r\n              value={this.state.name}\r\n            placeholder=\"Enter contact's name...\"\r\n            pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\r\n            title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\r\n              required\r\n              onChange={this.handleContact}\r\n          />\r\n          </label>\r\n          <label htmlFor={this.numberId}>\r\n            <h2>Number</h2>\r\n            <input\r\n              type=\"tel\"\r\n              name=\"number\"\r\n              id={this.numberId}\r\n              value={this.state.number}\r\n              placeholder=\"Enter contact's number...\"\r\n              pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\r\n              title=\"Номер телефона должен состоять цифр и может содержать пробелы, тире, круглые скобки и может начинаться с +\"\r\n              required\r\n              onChange={this.handleContact}\r\n            />\r\n\r\n          </label>\r\n          <button className=\"add-button\" type=\"submit\">Add contact</button>\r\n        </form>\r\n        )\r\n    }\r\n}","import { Component } from \"react\";\r\n\r\nexport class Filter extends Component {\r\n    filterNew = (e) => {\r\n        this.props.handleSearch(e)\r\n    }\r\n    \r\n    render() {\r\n        return (\r\n            <input\r\n                type=\"search\"\r\n                name=\"nameSearch\"\r\n                value={this.props.filter}\r\n                placeholder=\"Enter name\"\r\n                onChange={this.filterNew}\r\n            />\r\n        )\r\n    }\r\n}","import './App.scss';\nimport { Component } from 'react';\n\nimport ListItems from './components/Contacts_List/ListItems'\nimport { Form } from './components/Form/Form'\nimport { Filter } from './components/Filter/Filter'\nimport { parse } from 'uuid';\n\n\nclass App extends Component {\n  state = {\n    contacts: [],\n  filter: ''\n  }\n\n  componentWillMount() {\n    if (localStorage.getItem(\"contacts\")) {\n      this.setState({\n        contacts: JSON.parse(localStorage.getItem(\"contacts\")),\n      })\n    }\n  }\n\n  componentDidUpdate() {\n    localStorage.setItem(\"contacts\", JSON.stringify(this.state.contacts))\n  }\n\n  addNewContact = (obj) => {\n    this.setState((prev) => {\n      return { contacts: [...prev.contacts, obj] }\n    })\n  }\n  \n  handleSearch = (e) => {\n    this.setState({\n      filter: e.target.value,\n    })\n  }\n\n  delete = (e) => {\n    this.setState(prevState => {\n        const contacts = prevState.contacts.filter(contact => contact.name !== e.target.id);\n        return { contacts };\n    });\n}\n\n  render() { \n    return (\n      <div className=\"App\">\n        <Form addNewContact={this.addNewContact} existing={ this.state.contacts}/>\n        <h2>Contacts</h2>\n        <h3>Find contacts by name</h3>\n        <Filter handleSearch={this.handleSearch} filter={this.state.filter}/>\n        <ul>\n          <ListItems arr={this.state.contacts} filter={this.state.filter} deleteContact={ this.delete }/>\n        </ul>\n      </div>\n    )\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.scss';\nimport App from './App';\n\nReactDOM.render(\n  <>\n    <App />\n  </>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}